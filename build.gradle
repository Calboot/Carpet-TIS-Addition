plugins {
	id 'fabric-loom' version '0.11-SNAPSHOT'
	id 'maven-publish'

	// https://github.com/Juuxel/LoomQuiltflower
	id 'io.github.juuxel.loom-quiltflower' version '1.6.0'
}

repositories {
	mavenCentral()
	maven {
		url 'https://masa.dy.fi/maven'
	}
	maven {
		url 'https://jitpack.io'
	}
	maven {
		url 'https://www.cursemaven.com'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

boolean buildRelease = System.getenv("BUILD_RELEASE") == "true"
String buildNumber = System.getenv("BUILD_ID")
String versionSuffix = ''
if (!buildRelease) {
	// not release, no build number, probably not in github action CI, so added a -SNAPSHOT suffix
	if (buildNumber == null) {
		versionSuffix += '-SHAPSHOT'
	}
	else {
		versionSuffix += '+build.' + buildNumber
	}
}
String fullModVersion = project.mod_version + versionSuffix

archivesBaseName = project.archives_base_name
version = 'mc' + project.minecraft_version + '-v' + fullModVersion
group = project.maven_group


dependencies {
	// loom
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	
	// mods
	modImplementation "carpet:fabric-carpet:${project.carpet_core_version}"
	modCompileOnly "com.github.CaffeineMC.lithium-fabric:lithium:mc1.16.5-0.6.4"

	// runtime mods
	modRuntimeOnly "com.github.astei:lazydfu:0.1.2"  // savior of your cpu

	// library mods
	include(modImplementation("com.github.Fallen-Breath:conditional-mixin:${project.conditionalmixin_version}"))

	// libraries
	include(implementation("org.yaml:snakeyaml:${project.snakeyaml_version}"))
	testImplementation "junit:junit:${project.junit_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/carpet-tis-addition.accesswidener")
}

processResources {
	inputs.property "version", fullModVersion

	filesMatching("fabric.mod.json") {
		expand "version": fullModVersion
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
