plugins {
	id 'fabric-loom' version '0.9-SNAPSHOT'
	id 'maven-publish'
}

repositories {
	maven {
		url 'https://masa.dy.fi/maven'
	}
	maven {
		url 'https://www.cursemaven.com'
	}
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

String versionSuffix = ''
String buildNumber = System.getenv("GITHUB_RUN_NUMBER");
if (buildNumber != null) {
	versionSuffix = '+build.' + buildNumber
}
String fullModVersion = project.mod_version + versionSuffix

archivesBaseName = project.archives_base_name
version = 'mc' + project.minecraft_version + '-v' + fullModVersion
group = project.maven_group


dependencies {
	//to change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "carpet:fabric-carpet:${project.carpet_core_version}"
	modCompileOnly "curse.maven:lithium-360438:2904300"  // it's 1.15.2 tho but it doesn't matter

	// Fabric API. This is technically optional, but you probably want it anyway.
	// modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
	// You may need to force-disable transitiveness on them.
}

loom {
	accessWidenerPath = file("src/main/resources/carpet-tis-addition.accesswidener")
}

processResources {
	inputs.property "version", fullModVersion

	filesMatching("fabric.mod.json") {
		expand "version": fullModVersion
	}
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}

jar {
	from "LICENSE"
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			// add all the jars that should be included when publishing to maven
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	// select the repositories you want to publish to
	repositories {
		// uncomment to publish to the local maven
		// mavenLocal()
	}
}
